<Page x:Class="EasySave.MainView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
      xmlns:local="clr-namespace:EasySave"
      xmlns:language="clr-namespace:EasySave.Resources"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="DetailView"
      Background="White">
    <Page.Resources>

        <!-- Styles -->

        <!-- ListView Style -->
        <Style TargetType="{x:Type ListViewItem}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="FontWeight" Value="Bold" />
                    <!--<Setter Property="Background" Value="Red" />
                    <Setter Property="Foreground" Value="Blue" />-->
                </Trigger>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="FontWeight" Value="Bold" />
                    <!--<Setter Property="Background" Value="#423b36" />-->
                    <Setter Property="Foreground" Value="#423b36" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!--Generic button style-->
        <Style TargetType="{x:Type Button}" x:Key="buttonStyle">
            <Setter Property="Padding" Value="20" />
            <Setter Property="Background" Value="#423b36"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" Padding="3" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Play button style -->
        <Style TargetType="{x:Type Button}" x:Key="playButton" BasedOn="{StaticResource buttonStyle}">
            <Setter Property="Foreground" Value="LightBlue"/>
            <Setter Property="Margin" Value="10,0" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="ToolTip" Value="{x:Static language:Strings.toolTipPlayButton}" />
        </Style>

        <!-- Pause button style -->
        <Style TargetType="{x:Type Button}" x:Key="pauseButton" BasedOn="{StaticResource buttonStyle}">
            <Setter Property="Foreground" Value="Orange"/>
            <Setter Property="Margin" Value="0,0,10,0"/>
            <Setter Property="ToolTip" Value="{x:Static language:Strings.toolTipPauseButton}" />
        </Style>

        <!-- Stop button style -->
        <Style TargetType="{x:Type Button}" x:Key="stopButton" BasedOn="{StaticResource buttonStyle}">
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="Margin" Value="0,0,20,0"/>
            <Setter Property="ToolTip" Value="{x:Static language:Strings.toolTipStopButton}" />
        </Style>

        <!-- Add button style -->
        <Style TargetType="{x:Type Button}" x:Key="addButton" BasedOn="{StaticResource buttonStyle}">
            <Setter Property="Foreground" Value="#68ff0a"/>
            <Setter Property="Margin" Value="10,0"/>
            <Setter Property="ToolTip" Value="{x:Static language:Strings.toolTipAddButton}" />
        </Style>

        <!-- Delete button style -->
        <Style TargetType="{x:Type Button}" x:Key="deleteButton" BasedOn="{StaticResource buttonStyle}">
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="ToolTip" Value="{x:Static language:Strings.toolTipDeleteButton}" />
        </Style>

        <!-- ExecuteAll button style -->
        <Style TargetType="{x:Type Button}" x:Key="executeAllButton" BasedOn="{StaticResource buttonStyle}">
            <Setter Property="Foreground" Value="Magenta"/>
            <Setter Property="ToolTip" Value="{x:Static language:Strings.toolTipExecuteAllButton}" />
        </Style>
    </Page.Resources>

    <!-- Content -->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2.5*"/>
        </Grid.ColumnDefinitions>

        <!-- Box of job backup list (Left side) -->
        <Grid Width="Auto" Height="Auto" Grid.Row="0" Grid.Column="0" Margin="20,20,0,20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <!-- Box title -->
            <Border BorderThickness="1" BorderBrush="#423b36" Padding="6" Background="#423b36" CornerRadius="5, 5, 0, 0">
                <TextBlock Foreground="White" Text="{x:Static language:Strings.jobBackupList}"/>
            </Border>
            
            <!--Box content -->
            <Border Grid.Row="1" BorderThickness="1,0,1,1" BorderBrush="#423b36" Padding="6" CornerRadius="0, 0, 5, 5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    
                    <!-- Control buttons -->
                    <ScrollViewer HorizontalAlignment="Stretch" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                            <Button Content="{iconPacks:Material Kind=AnimationPlayOutline, Height=24, Width=24}" Name="btnExecuteSequentially" Style="{StaticResource executeAllButton}" Click="btnExecuteSequentially_Click" />
                            <Button Content="{iconPacks:FontAwesome Kind=PlaySolid, Height=24, Width=24}"  Style="{StaticResource playButton}" Name="btnPlay" Click="btnPlay_Click"/>
                            <Button Content="{iconPacks:FontAwesome Kind=PauseSolid, Height=24, Width=24}" Style="{StaticResource pauseButton}" Name="btnPause" Click="btnPause_Click"/>
                            <Button Content="{iconPacks:FontAwesome Kind=StopSolid, Height=24, Width=24}" Style="{StaticResource stopButton}" Name="btnStop" Click="btnStop_Click" />
                            <Button Content="{iconPacks:FontAwesome Kind=PlusSolid, Height=24, Width=24}" Name="btnAddJob" Style="{StaticResource addButton}" Click="btnAddJob_Click" />
                            <Button Content="{iconPacks:FontAwesome Kind=TrashSolid, Height=24, Width=24}" Name="btnRemoveJob" Style="{StaticResource deleteButton}" Click="btnDeleteJob_Click"/>
                        </StackPanel>
                    </ScrollViewer>
                    
                    <!-- Red line between buttons and list -->
                    <Rectangle Fill="#a30700" Grid.Row="1" Height="5" Margin="0"/>
                    
                    <!-- List of Job backup -->
                    <ListView Grid.Row="2" BorderThickness="0" ItemsSource="{Binding ListOfJobBackup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MouseDoubleClick="ListView_MouseDoubleClick" Name="listViewBackups" MouseLeftButtonUp="listViewBackups_MouseLeftButtonUp" Grid.ColumnSpan="2" SelectionChanged="listViewBackups_SelectionChanged" SelectedIndex="{Binding SelectedIndex, UpdateSourceTrigger=PropertyChanged}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <WrapPanel>
                                    <TextBlock Text="{Binding Label}" />
                                </WrapPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </Border>
        </Grid>
        
        <!-- Job backup detail (Right side) -->
        <Grid Grid.Column="1" Margin="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Box job backup Detail -->
            <Grid Width="Auto" Height="Auto"  Grid.Row="0" Margin="0,0,0,20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Box title -->
                <Border BorderThickness="1" BorderBrush="#423b36" Padding="6" Background="#423b36" CornerRadius="5, 5, 0, 0">
                    <TextBlock Foreground="White" Text="{Binding Job.Label}" Name="label"/>
                </Border>
                
                <!-- Job backup primary detail -->
                <Border Grid.Row="1" BorderThickness="1,0,1,1" BorderBrush="#423b36" Padding="6" CornerRadius="0, 0, 5, 5">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        
                        <!-- Source Directory -->
                        <TextBlock Text="{x:Static language:Strings.sourceDirectory}" Grid.Row="0" Grid.Column="0" FontFamily="Calibri"/>
                        <TextBlock Text="{Binding Job.SourceDirectory}" Grid.Row="0" Grid.Column="1"  Margin="5,0,0,0" Name="labelSourceDirectory"/>
                        <!-- Destination Directory -->
                        <TextBlock Text="{x:Static language:Strings.destinationDirectory}" Grid.Row="1" Grid.Column="0"/>
                        <TextBlock Text="{Binding Job.DestinationDirectory}" Grid.Row="1" Grid.Column="1" Margin="5,0,0,0" Name="destinationDirectory" />
                        <!-- Backup Type -->
                        <TextBlock Text="{x:Static language:Strings.jobType}" Grid.Row="2" Grid.Column="0"/>
                        <TextBlock Text="{Binding JobTypeFormatted}" Grid.Row="2" Grid.Column="1" Margin="5,0,0,0" Name="type" />
                        <!-- Total Files size -->
                        <TextBlock Text="{x:Static language:Strings.totalFilesSize}" Grid.Row="3" Grid.Column="0"/>
                        <TextBlock Grid.Row="3" Grid.Column="1" Margin="5,0,0,0" Name="totalFileSize">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} {1}">
                                    <Binding Path="TotalFilesSizeFormatted" UpdateSourceTrigger="PropertyChanged" />
                                    <Binding Source="{x:Static language:Strings.megabyteUnit}" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Grid>
                </Border>
            </Grid>

            <!--Box with execution details-->
            <Grid Width="Auto" Height="Auto"  Grid.Row="1" Margin="0,0,0,20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <!-- Box title -->
                <Border BorderThickness="1" BorderBrush="#423b36" Padding="6" Background="#423b36" CornerRadius="5, 5, 0, 0">
                    <TextBlock Foreground="White" Text="{x:Static language:Strings.boxExecutionTitle}"/>
                </Border>
                
                <!-- Box content -->
                <Border Grid.Row="1" BorderThickness="1,0,1,1" BorderBrush="#423b36" Padding="6" CornerRadius="0, 0, 5, 5">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="0.5*"/>
                        </Grid.ColumnDefinitions>
                        
                        <!-- Total files to copy -->
                        <TextBlock Text="{x:Static language:Strings.totalFilesToCopy}" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="0"  VerticalAlignment="Center" TextWrapping="Wrap"/>
                        <TextBlock Text="{Binding Job.State.TotalFilesToCopy, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="1" VerticalAlignment="Top"/>
                        <!-- Number of files remaining to copy -->
                        <TextBlock Text="{x:Static language:Strings.filesLeftToCopy}" HorizontalAlignment="Center" Grid.Column="1" VerticalAlignment="Center" TextWrapping="Wrap"/>
                        <TextBlock Text="{Binding Job.State.TotalFilesRemaining, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="1" VerticalAlignment="Top"/>
                        <!-- Size remaining -->
                        <TextBlock Text="{x:Static language:Strings.totalSizeRemaining}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0" Grid.Column="2" TextWrapping="Wrap"/>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Column="2" Grid.Row="1">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} {1}">
                                    <Binding Path="Job.State.SizeRemainingFormatted" UpdateSourceTrigger="PropertyChanged" />
                                    <Binding Source="{x:Static language:Strings.megabyteUnit}" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <!-- State -->
                        <TextBlock Text="{x:Static language:Strings.state}" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding Job.State.StateFormatted}" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="1" VerticalAlignment="Top"/>
                        <!-- Progress bar -->
                        <Grid Grid.Row="2" Grid.ColumnSpan="4" Margin="10,10,10,10">
                            <ProgressBar  Height="20" Value="{Binding Job.State.Progression, UpdateSourceTrigger=PropertyChanged}" Maximum="100" Minimum="0" Name="progressStatus"/>
                            <TextBlock Text="{Binding ElementName=progressStatus, Path=Value, StringFormat={}{0:0}%}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>

                    </Grid>
                </Border>
            </Grid>

            <!--Box with logs-->
            <Grid Width="Auto" Height="Auto"  Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Box Title -->
                <Border BorderThickness="1" BorderBrush="#423b36" Padding="6" Background="#423b36" CornerRadius="5, 5, 0, 0">
                    <TextBlock Foreground="White" Text="{x:Static language:Strings.boxLogTitle}"/>
                </Border>
                
                <!-- Box content -->
                <Border Grid.Row="1" BorderThickness="1,0,1,1" BorderBrush="#423b36" Padding="6" CornerRadius="0, 0, 5, 5">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <!-- Use of textbox in readonly to allow user to select log text (i.e make some research on web)-->
                        <TextBox Name="txtBlockLogs" IsReadOnly="True" BorderThickness="0" Text="{Binding Job.State.Log}" />
                    </ScrollViewer>
                </Border>
            </Grid>
        </Grid>
    </Grid>
</Page>
