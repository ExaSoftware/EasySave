<Page x:Class="EasySave.MainView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
      xmlns:local="clr-namespace:EasySave"
      xmlns:language="clr-namespace:EasySave.Resources"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="DetailView"
      Background="White">
    <Page.Resources>

        <!-- Styles -->

        <Style TargetType="{x:Type ListViewItem}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="FontWeight" Value="Bold" />
                    <!--<Setter Property="Background" Value="Red" />
                    <Setter Property="Foreground" Value="Blue" />-->
                </Trigger>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="FontWeight" Value="Bold" />
                    <!--<Setter Property="Background" Value="#423b36" />-->
                    <Setter Property="Foreground" Value="#423b36" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="buttonStyle">
            <Setter Property="Padding" Value="20" />
            <Setter Property="Background" Value="#423b36"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" Padding="3" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="playButton" BasedOn="{StaticResource buttonStyle}">
            <Setter Property="Foreground" Value="LightBlue"/>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="pauseButton" BasedOn="{StaticResource buttonStyle}">
            <Setter Property="Foreground" Value="Orange"/>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="stopButton" BasedOn="{StaticResource buttonStyle}">
            <Setter Property="Foreground" Value="Red"/>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="addButton" BasedOn="{StaticResource buttonStyle}">
            <Setter Property="Foreground" Value="#68ff0a"/>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="deleteButton" BasedOn="{StaticResource buttonStyle}">
            <Setter Property="Foreground" Value="Red"/>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="sequentiallyExecutionButton" BasedOn="{StaticResource buttonStyle}">
            <Setter Property="Foreground" Value="White"/>
        </Style>
    </Page.Resources>

    <!-- Content -->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2.5*"/>
        </Grid.ColumnDefinitions>

        <!-- Box of job backup list -->
        <Grid Width="Auto" Height="Auto" Grid.Row="0" Grid.Column="0" Margin="20,20,0,20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Border BorderThickness="1" BorderBrush="#423b36" Padding="6" Background="#423b36" CornerRadius="5, 5, 0, 0">
                <TextBlock Foreground="White" Text="{x:Static language:Strings.jobBackupList}"/>
            </Border>
            <Border Grid.Row="1" BorderThickness="1,0,1,1" BorderBrush="#423b36" Padding="6" CornerRadius="0, 0, 5, 5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="131*"/>
                        <ColumnDefinition Width="63*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
                        <Button Content="{iconPacks:Material Kind=AnimationPlayOutline, Height=24, Width=24}" Name="btnExecuteSequentially" Height="Auto" Width="Auto" Style="{StaticResource sequentiallyExecutionButton}" Click="btnExecuteSequentially_Click" />
                        <Button Content="{iconPacks:FontAwesome Kind=PlusSolid, Height=24, Width=24}" Name="btnAddJob" Margin="10,0" Height="Auto" Width="Auto" Style="{StaticResource addButton}" Click="btnAddJob_Click" />
                        <Button Content="{iconPacks:FontAwesome Kind=TrashSolid, Height=24, Width=24}" Name="btnRemoveJob" Margin="0,0,10,0" Height="Auto" Style="{StaticResource deleteButton}" Click="btnDeleteJob_Click"/>
                    </StackPanel>
                    <Rectangle Fill="#a30700" Grid.Row="1" Height="5" Margin="0,5,0,0" Grid.ColumnSpan="2"/>
                    <ListView Grid.Row="2" BorderThickness="0" ItemsSource="{Binding ListOfJobBackup}" MouseDoubleClick="ListView_MouseDoubleClick" Name="listViewBackups" MouseLeftButtonUp="listViewBackups_MouseLeftButtonUp" Grid.ColumnSpan="2" SelectionChanged="listViewBackups_SelectionChanged" SelectedIndex="{Binding SelectedIndex, UpdateSourceTrigger=PropertyChanged}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <WrapPanel>
                                    <TextBlock Text="{Binding Label}" />
                                </WrapPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </Border>
        </Grid>
        <Grid Grid.Column="1" Margin="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Box job backup Detail -->
            <Grid Width="Auto" Height="Auto"  Grid.Row="0" Margin="0,0,0,20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border BorderThickness="1" BorderBrush="#423b36" Padding="6" Background="#423b36" CornerRadius="5, 5, 0, 0">
                    <TextBlock Foreground="White" Text="{Binding Job.Label}" Name="label"/>
                </Border>
                <Border Grid.Row="1" BorderThickness="1,0,1,1" BorderBrush="#423b36" Padding="6" CornerRadius="0, 0, 5, 5">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{x:Static language:Strings.sourceDirectory}" Grid.Row="0" Grid.Column="0"/>
                        <TextBlock Text="{x:Static language:Strings.destinationDirectory}" Grid.Row="1" Grid.Column="0" />
                        <TextBlock Text="{x:Static language:Strings.jobType}" Grid.Row="2" Grid.Column="0" />
                        <TextBlock Text="{x:Static language:Strings.totalFilesSize}" Grid.Row="3" Grid.Column="0" />
                        <TextBlock Text="{Binding Job.SourceDirectory}" Grid.Row="0" Grid.Column="1"  Margin="5,0,0,0" Name="labelSourceDirectory"/>
                        <TextBlock Text="{Binding Job.DestinationDirectory}" Grid.Row="1" Grid.Column="1" Margin="5,0,0,0" Name="destinationDirectory"/>
                        <TextBlock Text="" Grid.Row="2" Grid.Column="1" Margin="5,0,0,0" Name="type"/>
                        <TextBlock Grid.Row="3" Grid.Column="1" Margin="5,0,0,0" Name="totalFileSize">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} {1}">
                                    <Binding Path="TotalFilesSizeFormatted" UpdateSourceTrigger="PropertyChanged" />
                                    <Binding Source="{x:Static language:Strings.megabyteUnit}" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Grid>
                </Border>
            </Grid>

            <!--Box with execution details-->
            <Grid Width="Auto" Height="Auto"  Grid.Row="1" Margin="0,0,0,20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border BorderThickness="1" BorderBrush="#423b36" Padding="6" Background="#423b36" CornerRadius="5, 5, 0, 0">
                    <TextBlock Foreground="White" Text="{x:Static language:Strings.boxExecutionTitle}"/>
                </Border>
                <Border Grid.Row="1" BorderThickness="1,0,1,1" BorderBrush="#423b36" Padding="6" CornerRadius="0, 0, 5, 5">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="0.5*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Vertical" Margin="0,0,0,0" Grid.Column="0">
                            <TextBlock Text="{x:Static language:Strings.totalFilesToCopy}" HorizontalAlignment="Center"/>
                            <TextBlock Text="{Binding Job.State.TotalFilesToCopy, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Margin="0,0,0,0" Grid.Column="1">
                            <TextBlock Text="{x:Static language:Strings.filesLeftToCopy}" HorizontalAlignment="Center"/>
                            <TextBlock Text="{Binding Job.State.TotalFilesRemaining, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Margin="0,0,0,0" Grid.Column="2">
                            <TextBlock Text="{x:Static language:Strings.totalSizeRemaining}" HorizontalAlignment="Center"/>
                            <TextBlock HorizontalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} {1}">
                                        <Binding Path="Job.State.SizeRemainingFormatted" UpdateSourceTrigger="PropertyChanged" />
                                        <Binding Source="{x:Static language:Strings.megabyteUnit}" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Margin="0,0,0,0" Grid.Column="3">
                            <TextBlock Text="{x:Static language:Strings.state}" HorizontalAlignment="Center"/>
                            <TextBlock Text="{Binding Job.State.State, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"/>
                        </StackPanel>
                        <ProgressBar Grid.Row="1" Grid.ColumnSpan="3" Height="15" Margin="0,10,10,0" Value="{Binding Job.State.Progression, UpdateSourceTrigger=PropertyChanged}" Maximum="100" Minimum="0"/>
                        <StackPanel Orientation="Horizontal" Grid.Column="3" Grid.Row="1" Margin="0,10,0,0" HorizontalAlignment="Center">
                            <Button Content="{iconPacks:FontAwesome Kind=PlaySolid, Height=24, Width=24}" Margin="10,0" Height="Auto" Style="{StaticResource playButton}" Name="btnPlay" Click="btnPlay_Click"/>
                            <Button Content="{iconPacks:FontAwesome Kind=PauseSolid, Height=24, Width=24}" Margin="0,0,10,0" Height="Auto" Style="{StaticResource pauseButton}" Name="btnPause" Click="btnPause_Click"/>
                            <Button Content="{iconPacks:FontAwesome Kind=StopSolid, Height=24, Width=24}" Margin="0,0,10,0" Height="Auto" Style="{StaticResource stopButton}" Name="btnStop" Click="btnStop_Click" />
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>

            <!--Box with logs-->
            <Grid Width="Auto" Height="Auto"  Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border BorderThickness="1" BorderBrush="#423b36" Padding="6" Background="#423b36" CornerRadius="5, 5, 0, 0">
                    <TextBlock Foreground="White" Text="{x:Static language:Strings.boxLogTitle}"/>
                </Border>
                <Border Grid.Row="1" BorderThickness="1,0,1,1" BorderBrush="#423b36" Padding="6" CornerRadius="0, 0, 5, 5">
                    <ScrollViewer>
                        <!-- Use of textbox in readonly to allow user to select log text (i.e make some research on web)-->
                        <TextBox Name="txtBlockLogs" IsReadOnly="True" BorderThickness="0">

                        </TextBox>
                    </ScrollViewer>
                </Border>
            </Grid>
        </Grid>
    </Grid>
</Page>
